c not

1.printf();
printf会从数组str的开头一直打印到Null字符为止，Null字符本身是Non-printable字符，不打印。这其实是一个危险的信号：如果数组str中没有Null字符，那么printf函数就会访问数组越界，后果可能会很诡异：有时候打印出乱码，有时候看起来没错误，有时候引起程序崩溃
2.indent工具可以把代码格式化成某种风格
'indent -kr -i8 main.c'
-kr选项表示K&R风格，-i8表示缩进8个空格的长度。如果没有指定-nut选项，则每8个缩进空格会自动用一个Tab代替

3.gdb
$ gcc -g main.c -o main
$ gdb main

1.-g选项的作用是在可执行文件中加入源代码的信息
2.gcc的-g选项并不是把源代码嵌入到可执行文件中的，在调试时也需要源文件
3.因为print命令后面跟的是表达式，而我们知道赋值和函数调用也都是表达式，所以也可以用print命令修改变量的值或者调用函数
4.用gcc的-E选项可以看到预处理之后、编译之前的程序
用cpp main.c命令也可以达到同样的效果，只做预处理而不编译，cpp表示C preprocessor。

命令	描述
backtrace（或bt）	查看各级函数调用及参数
finish	连续运行到当前函数返回为止，然后停下来等待命令
frame（或f） 帧编号	选择栈帧
info（或i） locals	查看当前栈帧局部变量的值
list（或l）	列出源代码，接着上次的位置往下列，每次列10行
list 行号	列出从第几行开始的源代码
list 函数名	列出某个函数的源代码
next（或n）	执行下一行语句
print（或p）	打印表达式的值，通过表达式可以修改变量的值或者调用函数
quit（或q）	退出gdb调试环境
set var	修改变量的值
start	开始执行程序，停在main函数第一行语句前面等待命令
step（或s）	执行下一行语句，如果有函数调用则进入到函数中

lldb
1. b 行号，函数名
2. expr 修改变量值
expr unsigned int $foo = 5
3. fr v 查看局部变量
4. display va 显示变量va 的值
5. br l 列出所有断点
6. breakpoint disable 1 暂停断点

// 字符串、数组
char str[10] = "Hello";
1.字符串字面值是只读的，不允许修改。字符串字面值还有一点和数组名类似，做右值使用时自动转换成指向首元素的指针
2.虽然字符串字面值"Hello"是只读的，但用它初始化的数组str却是可读可写的
3.如果要用一个字符串字面值准确地初始化一个字符数组，最好的办法是不指定数组的长度，让编译器自己计算
4.printf("string: %s\n", str);
printf会从数组str的开头一直打印到Null字符为止，Null字符本身是Non-printable字符，不打印。
这其实是一个危险的信号：如果数组str中没有Null字符，那么printf函数就会访问数组越界，
后果可能会很诡异：有时候打印出乱码，有时候看起来没错误，有时候引起程序崩溃

// 代码风格
$ indent -kr -i8 main.c
1.-kr选项表示K&R风格，-i8表示缩进8个空格的长度。如果没有指定-nut选项，则每8个缩进空格会自动用一个Tab代替

// 计算机体系结构
由于各种设备的操作方法各不相同，每种设备都需要专门的设备驱动程序（Device Driver），一个操作系统为了支持广泛的设备就需要有大量的设备驱动程序，
事实上Linux内核源代码中绝大部分是设备驱动程序。设备驱动程序通常是内核里的一组函数，通过读写设备寄存器实现对设备的初始化、读、写等操作，
有些设备还要提供一个中断处理函数供ISR调用

push这个标识符具有External Linkage指的是：如果把main.c和stack.c链接在一起，如果push在main.c和stack.c中都有声明（在stack.c中的声明同时也是定义），
那么这些声明指的是同一个函数，链接之后是同一个GLOBAL符号，代表同一个地址。
函数声明中的extern也可以省略不写，不写extern的函数声明也表示这个函数具有External Linkage。

函数声明的extern可写可不写，而变量声明如果不写extern意思就完全变了

用static关键字声明具有Internal Linkage的函数也是出于这个目的。在一个模块中，有些函数是提供给外界使用的，也称为导出（Export）给外界使用，
这些函数声明为External Linkage的。
有些函数只在模块内部使用而不希望被外界访问到，则声明为Internal Linkage的
